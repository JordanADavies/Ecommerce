// Mocks generated by Mockito 5.2.0 from annotations
// in ecommerce/test/screens/cart/application/cart_cubit_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i5;

import 'package:dartz/dartz.dart' as _i2;
import 'package:ecommerce/screens/cart/infrastructure/cart_facade.dart' as _i4;
import 'package:ecommerce/screens/products/domain/product.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeEither_0<L, R> extends _i1.Fake implements _i2.Either<L, R> {}

class _Fake$ProductCopyWith_1<$Res> extends _i1.Fake
    implements _i3.$ProductCopyWith<$Res> {}

/// A class which mocks [CartFacade].
///
/// See the documentation for Mockito's code generation for more information.
class MockCartFacade extends _i1.Mock implements _i4.CartFacade {
  MockCartFacade() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<_i2.Either<String, List<_i3.Product>>> fetchProducts() =>
      (super.noSuchMethod(Invocation.method(#fetchProducts, []),
              returnValue: Future<_i2.Either<String, List<_i3.Product>>>.value(
                  _FakeEither_0<String, List<_i3.Product>>()))
          as _i5.Future<_i2.Either<String, List<_i3.Product>>>);
  @override
  _i5.Future<_i2.Either<String, _i2.Unit>> addProduct(_i3.Product? product) =>
      (super.noSuchMethod(Invocation.method(#addProduct, [product]),
              returnValue: Future<_i2.Either<String, _i2.Unit>>.value(
                  _FakeEither_0<String, _i2.Unit>()))
          as _i5.Future<_i2.Either<String, _i2.Unit>>);
  @override
  _i5.Future<_i2.Either<String, _i2.Unit>> removeProduct(
          _i3.Product? product) =>
      (super.noSuchMethod(Invocation.method(#removeProduct, [product]),
              returnValue: Future<_i2.Either<String, _i2.Unit>>.value(
                  _FakeEither_0<String, _i2.Unit>()))
          as _i5.Future<_i2.Either<String, _i2.Unit>>);
}

/// A class which mocks [Product].
///
/// See the documentation for Mockito's code generation for more information.
class MockProduct extends _i1.Mock implements _i3.Product {
  MockProduct() {
    _i1.throwOnMissingStub(this);
  }

  @override
  int get id =>
      (super.noSuchMethod(Invocation.getter(#id), returnValue: 0) as int);
  @override
  String get title =>
      (super.noSuchMethod(Invocation.getter(#title), returnValue: '')
          as String);
  @override
  String get desciption =>
      (super.noSuchMethod(Invocation.getter(#desciption), returnValue: '')
          as String);
  @override
  double get price =>
      (super.noSuchMethod(Invocation.getter(#price), returnValue: 0.0)
          as double);
  @override
  String get image =>
      (super.noSuchMethod(Invocation.getter(#image), returnValue: '')
          as String);
  @override
  _i3.$ProductCopyWith<_i3.Product> get copyWith =>
      (super.noSuchMethod(Invocation.getter(#copyWith),
              returnValue: _Fake$ProductCopyWith_1<_i3.Product>())
          as _i3.$ProductCopyWith<_i3.Product>);
  @override
  Map<String, dynamic> toJson() =>
      (super.noSuchMethod(Invocation.method(#toJson, []),
          returnValue: <String, dynamic>{}) as Map<String, dynamic>);
}
